jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigMethodComparisonsZoomJitter.jpeg", width=3000, height=2000, res=200)
par(mfrow=c(3,5), mar=c(5.1, 4.1, 1.1, 1.1))
graphZoomJitter(dist$broadCoreGenomeDistance, dist$plasmid90Distance, "Assembly Core Genome Distance", "Plasmid 90 Distance")
graphZoomJitter(dist$broadCoreGenomeDistance, dist$plasmid50Distance, "Assembly Core Genome Distance", "Plasmid 50 Distnace")
graphZoomJitter(dist$broadCoreGenomeDistance, dist$cpSNPDistance, "Assembly Core Genome Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$broadCoreGenomeDistance, dist$ncSNPDistance, "Assembly Core Genome Distance", "Aligned to NC009648 SNP Distance")
graphZoomJitter(dist$plasmid90Distance, dist$plasmid50Distance, "Plasmid 90 Distance", "Plasmid 50 Distance")
graphZoomJitter(dist$plasmid90Distance, dist$cpSNPDistance, "Plasmid 90 Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$plasmid90Distance, dist$ncSNPDistance, "Plasmid 90 Distance", "Aligned to NC009648 SNP Distance")
graphZoomJitter(dist$plasmid50Distance, dist$cpSNPDistance, "Plasmid 50 Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$plasmid50Distance, dist$ncSNPDistance, "Plasmid 50 Distance", "Aligned to NC009648 SNP Distance")
graphZoomJitter(dist$ncSNPDistance, dist$cpSNPDistance, "Aligned to NC009648 SNP Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$cophylogDistance, dist$broadCoreGenomeDistance, "Co-Phylog Distance", "Assembly Core Genome Distance")
graphZoomJitter(dist$cophylogDistance, dist$plasmid90Distance, "Co-Phylog Distance", "Plasmid 90 Distance")
graphZoomJitter(dist$cophylogDistance, dist$plasmid50Distance, "Co-Phylog Distance", "Plasmid 50 Distance")
graphZoomJitter(dist$cophylogDistance, dist$cpSNPDistance, "Co-Phylog Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$cophylogDistance, dist$ncSNPDistance, "Co-Phylog Distance", "Aligned to NC009648 SNP Distance")
dev.off()
##graph small distances, with jitter, on log scale
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigMethodComparisonsZoomJitterLog.jpeg", width=3000, height=2000, res=200)
par(mfrow=c(3,5), mar=c(5.1, 4.1, 1.1, 1.1))
graphZoomJitter(log10(dist$broadCoreGenomeDistance + 1), log10(dist$plasmid90Distance + 1), "log10(Assembly Core\n Genome Distance + 1)", "log10(Plasmid 90 Distance + 1)")
graphZoomJitter(log10(dist$broadCoreGenomeDistance + 1), log10(dist$plasmid50Distance + 1), "log10(Assembly Core\n Genome Distance + 1)", "log10(Plasmid 50 Distnace + 1)")
graphZoomJitter(log10(dist$broadCoreGenomeDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Assembly Core Genome\n Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$broadCoreGenomeDistance + 1), log10(dist$ncSNPDistance + 1), "log10(Assembly Core Genome\n Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graphZoomJitter(log10(dist$plasmid90Distance + 1), log10(dist$plasmid50Distance + 1), "log10(Plasmid 90 Distance + 1)", "log10(Plasmid 50 Distance + 1)")
graphZoomJitter(log10(dist$plasmid90Distance + 1), log10(dist$cpSNPDistance + 1), "log10(Plasmid 90 Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$plasmid90Distance + 1), log10(dist$ncSNPDistance + 1), "log10(Plasmid 90 Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graphZoomJitter(log10(dist$plasmid50Distance + 1), log10(dist$cpSNPDistance + 1), "log10(Plasmid 50 Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$plasmid50Distance + 1), log10(dist$ncSNPDistance + 1), "log10(Plasmid 50 Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graphZoomJitter(log10(dist$ncSNPDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Aligned to NC009648\n SNP Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$cophylogDistance + 1), log10(dist$broadCoreGenomeDistance + 1), "log10(Co-Phylog Distance + 1)", "log10(Assembly Core Genome Distance + 1)")
graphZoomJitter(log10(dist$cophylogDistance + 1), log10(dist$plasmid90Distance + 1), "log10(Co-Phylog Distance + 1)", "log10(Plasmid 90 Distance + 1)")
graphZoomJitter(log10(dist$cophylogDistance + 1), log10(dist$plasmid50Distance + 1), "log10(Co-Phylog Distance + 1)", "log10(Plasmid 50 Distance + 1)")
graphZoomJitter(log10(dist$cophylogDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Co-Phylog Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$cophylogDistance + 1), log10(dist$ncSNPDistance + 1), "log10(Co-Phylog Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
dev.off()
###indel comparisons
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigMethodComparisonsIndel.jpeg", width=3000, height=2000, res=200)
par(mfrow=c(3,5), mar=c(5.1, 4.1, 1.1, 1.1))
graph(dist$cpIndelDistance, dist$broadCoreGenomeDistance, "Aligned to CP006923 Indel Distance", "Assembly Core Genome Distance")
graph(dist$cpIndelDistance, dist$plasmid90Distance, "Aligned to CP006923 Indel Distance", "Plasmid 90 Distance")
graph(dist$cpIndelDistance, dist$plasmid50Distance, "Aligned to CP006923 Indel Distance", "Plasmid 50 Distnace")
graph(dist$cpIndelDistance, dist$cpSNPDistance, "Aligned to CP006923 Indel Distance", "Aligned to CP006923 SNP Distance")
graph(dist$cpIndelDistance, dist$ncSNPDistance, "Aligned to CP006923 Indel Distance", "Aligned to NC009648 SNP Distance")
graph(dist$cpIndelDistance, dist$cophylogDistance, "Aligned to CP006923 Indel Distance", "Co-Phylog Distance")
graph(dist$cpIndelDistance, dist$ncIndelDistance, "Aligned to CP006923 Indel Distance", "Aligned to NC009648 Indel Distance")
graph(dist$ncIndelDistance, dist$broadCoreGenomeDistance, "Aligned to NC009648 Indel Distance", "Assembly Core Genome Distance")
graph(dist$ncIndelDistance, dist$plasmid90Distance, "Aligned to NC009648 Indel Distance", "Plasmid 90 Distance")
graph(dist$ncIndelDistance, dist$plasmid50Distance, "Aligned to NC009648 Indel Distance", "Plasmid 50 Distnace")
graph(dist$ncIndelDistance, dist$cpSNPDistance, "Aligned to NC009648 Indel Distance", "Aligned to CP006923 SNP Distance")
graph(dist$ncIndelDistance, dist$ncSNPDistance, "Aligned to NC009648 Indel Distance", "Aligned to NC009648 SNP Distance")
graph(dist$ncIndelDistance, dist$cophylogDistance, "Aligned to NC009648 Indel Distance", "Co-Phylog Distance")
dev.off()
##indel comparisons, log scale
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigMethodComparisonsIndelLog.jpeg", width=3000, height=2000, res=200)
par(mfrow=c(3,5), mar=c(5.1, 4.1, 1.1, 1.1))
graph(log10(dist$cpIndelDistance + 1), log10(dist$broadCoreGenomeDistance + 1), "log10(Aligned to CP006923 Indel Distance", "log10(Assembly Core Genome Distance + 1)")
graph(log10(dist$cpIndelDistance + 1), log10(dist$plasmid90Distance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Plasmid 90 Distance + 1)")
graph(log10(dist$cpIndelDistance + 1), log10(dist$plasmid50Distance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Plasmid 50 Distnace + 1)")
graph(log10(dist$cpIndelDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graph(log10(dist$cpIndelDistance + 1), log10(dist$ncSNPDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graph(log10(dist$cpIndelDistance + 1), log10(dist$cophylogDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Co-Phylog Distance + 1)")
graph(log10(dist$cpIndelDistance + 1), log10(dist$ncIndelDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Aligned to NC009648 Indel Distance + 1)")
graph(log10(dist$ncIndelDistance + 1), log10(dist$broadCoreGenomeDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Assembly Core Genome Distance + 1)")
graph(log10(dist$ncIndelDistance + 1), log10(dist$plasmid90Distance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Plasmid 90 Distance + 1)")
graph(log10(dist$ncIndelDistance + 1), log10(dist$plasmid50Distance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Plasmid 50 Distnace + 1)")
graph(log10(dist$ncIndelDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graph(log10(dist$ncIndelDistance + 1), log10(dist$ncSNPDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graph(log10(dist$ncIndelDistance + 1), log10(dist$cophylogDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Co-Phylog Distance + 1)")
dev.off()
##indel comparisons, graph small distances, with jitter
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigMethodComparisonsIndelZoomJitter.jpeg", width=3000, height=2000, res=200)
par(mfrow=c(3,5), mar=c(5.1, 4.1, 1.1, 1.1))
graphZoomJitter(dist$cpIndelDistance, dist$broadCoreGenomeDistance, "Aligned to CP006923 Indel Distance", "Assembly Core Genome Distance")
graphZoomJitter(dist$cpIndelDistance, dist$plasmid90Distance, "Aligned to CP006923 Indel Distance", "Plasmid 90 Distance")
graphZoomJitter(dist$cpIndelDistance, dist$plasmid50Distance, "Aligned to CP006923 Indel Distance", "Plasmid 50 Distnace")
graphZoomJitter(dist$cpIndelDistance, dist$cpSNPDistance, "Aligned to CP006923 Indel Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$cpIndelDistance, dist$ncSNPDistance, "Aligned to CP006923 Indel Distance", "Aligned to NC009648 SNP Distance")
graphZoomJitter(dist$cpIndelDistance, dist$cophylogDistance, "Aligned to CP006923 Indel Distance", "Co-Phylog Distance")
graphZoomJitter(dist$cpIndelDistance, dist$ncIndelDistance, "Aligned to CP006923 Indel Distance", "Aligned to NC009648 Indel Distance")
graphZoomJitter(dist$ncIndelDistance, dist$broadCoreGenomeDistance, "Aligned to NC009648 Indel Distance", "Assembly Core Genome Distance")
graphZoomJitter(dist$ncIndelDistance, dist$plasmid90Distance, "Aligned to NC009648 Indel Distance", "Plasmid 90 Distance")
graphZoomJitter(dist$ncIndelDistance, dist$plasmid50Distance, "Aligned to NC009648 Indel Distance", "Plasmid 50 Distnace")
graphZoomJitter(dist$ncIndelDistance, dist$cpSNPDistance, "Aligned to NC009648 Indel Distance", "Aligned to CP006923 SNP Distance")
graphZoomJitter(dist$ncIndelDistance, dist$ncSNPDistance, "Aligned to NC009648 Indel Distance", "Aligned to NC009648 SNP Distance")
graphZoomJitter(dist$ncIndelDistance, dist$cophylogDistance, "Aligned to NC009648 Indel Distance", "Co-Phylog Distance")
dev.off()
##indel comparisons, graph small distances, with jitter, on log scale
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigMethodComparisonsIndelZoomJitterLog.jpeg", width=3000, height=2000, res=200)
par(mfrow=c(3,5), mar=c(5.1, 4.1, 1.1, 1.1))
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$broadCoreGenomeDistance + 1), "log10(Aligned to CP006923 Indel Distance", "log10(Assembly Core Genome Distance + 1)")
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$plasmid90Distance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Plasmid 90 Distance + 1)")
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$plasmid50Distance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Plasmid 50 Distnace + 1)")
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$ncSNPDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$cophylogDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Co-Phylog Distance + 1)")
graphZoomJitter(log10(dist$cpIndelDistance + 1), log10(dist$ncIndelDistance + 1), "log10(Aligned to CP006923 Indel Distance + 1)", "log10(Aligned to NC009648 Indel Distance + 1)")
graphZoomJitter(log10(dist$ncIndelDistance + 1), log10(dist$broadCoreGenomeDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Assembly Core Genome Distance + 1)")
graphZoomJitter(log10(dist$ncIndelDistance + 1), log10(dist$plasmid90Distance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Plasmid 90 Distance + 1)")
graphZoomJitter(log10(dist$ncIndelDistance + 1), log10(dist$plasmid50Distance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Plasmid 50 Distnace + 1)")
graphZoomJitter(log10(dist$ncIndelDistance + 1), log10(dist$cpSNPDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Aligned to CP006923 SNP Distance + 1)")
graphZoomJitter(log10(dist$ncIndelDistance + 1), log10(dist$ncSNPDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Aligned to NC009648 SNP Distance + 1)")
graphZoomJitter(log10(dist$ncIndelDistance + 1), log10(dist$cophylogDistance + 1), "log10(Aligned to NC009648 Indel Distance + 1)", "log10(Co-Phylog Distance + 1)")
dev.off()
############show graph against time
dist = merge(meta, dist, by=c("xID", "yID"))
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigDistanceVsTime.jpeg", width=1000, height=1600, res=200)
par(mfrow=c(4, 2), mar=c(5.1, 4.1, 1.1, 2.1))
plot(x=dist$plasmid90Distance, y=dist$cultureDiff, xlab="Plasmid 90 Distance", ylab="time between cultures")
plot(x=dist$plasmid50Distance, y=dist$cultureDiff, xlab="Plasmid 50 Distance", ylab="time between cultures")
plot(x=dist$cpSNPDistance, y=dist$cultureDiff, xlab="Aligned to CP006923 SNP Distance", ylab="time between cultures")
plot(x=dist$ncSNPDistance, y=dist$cultureDiff, xlab="Aligned to NC009648 SNP Distance", ylab="time between cultures")
plot(x=dist$cpIndelDistance, y=dist$cultureDiff, xlab="Aligned to CP006923 Indel Distance", ylab="time between cultures")
plot(x=dist$ncIndelDistance, y=dist$cultureDiff, xlab="Aligned to NC009648 Indel Distance", ylab="time between cultures")
plot(x=dist$broadCoreGenomeDistance, y=dist$cultureDiff, xlab="Assembly Core Genome Distance", ylab="time between cultures")
plot(x=dist$cophylogDistance, y=dist$cultureDiff, xlab="Co-Phylog Distance", ylab="time between cultures")
dev.off()
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigDistanceVsTimeLog.jpeg", width=1000, height=1600, res=200)
par(mfrow=c(4, 2), mar=c(5.1, 5.1, 1.1, 3.1))
plot(x=log10(dist$plasmid90Distance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Plasmid 90 Distance + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$plasmid50Distance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Plasmid 50 Distance + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$cpSNPDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to CP006923 SNP Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$ncSNPDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to NC009648 SNP Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$cpIndelDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to CP006923 Indel Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$ncIndelDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to NC009648 Indel Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$broadCoreGenomeDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Assembly Core Genome Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plot(x=log10(dist$cophylogDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Co-Phylog Distance + 1)", ylab="log10(time between cultures\n + 1)")
dev.off()
###distance versus time zoomed in with jitter, sort by time (y) then distance (X)
plotZoomJitter<-function(x, y, xlab, ylab) {
df = data.frame(x=x, y=y)
df = df[order(df$y, df$x),]
x = df$x[1:500]
y = df$y[1:500]
plot(x=jitter(x, amount=0), y=jitter(y, amount=0), xlab=xlab, ylab=ylab)
}
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigDistanceVsTimeZoomJitter.jpeg", width=1000, height=1600, res=200)
par(mfrow=c(4, 2), mar=c(5.1, 4.1, 1.1, 2.1))
plotZoomJitter(x=dist$plasmid90Distance, y=dist$cultureDiff, xlab="Plasmid 90 Distance", ylab="time between cultures")
plotZoomJitter(x=dist$plasmid50Distance, y=dist$cultureDiff, xlab="Plasmid 50 Distance", ylab="time between cultures")
plotZoomJitter(x=dist$cpSNPDistance, y=dist$cultureDiff, xlab="Aligned to CP006923 SNP Distance", ylab="time between cultures")
plotZoomJitter(x=dist$ncSNPDistance, y=dist$cultureDiff, xlab="Aligned to NC009648 SNP Distance", ylab="time between cultures")
plotZoomJitter(x=dist$cpIndelDistance, y=dist$cultureDiff, xlab="Aligned to CP006923 Indel Distance", ylab="time between cultures")
plotZoomJitter(x=dist$ncIndelDistance, y=dist$cultureDiff, xlab="Aligned to NC009648 Indel Distance", ylab="time between cultures")
plotZoomJitter(x=dist$broadCoreGenomeDistance, y=dist$cultureDiff, xlab="Assembly Core Genome Distance", ylab="time between cultures")
plotZoomJitter(x=dist$cophylogDistance, y=dist$cultureDiff, xlab="Co-Phylog Distance", ylab="time between cultures")
dev.off()
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigDistanceVsTimeZoomJitterLog.jpeg", width=1000, height=1600, res=200)
par(mfrow=c(4, 2), mar=c(5.1, 5.1, 1.1, 3.1))
plotZoomJitter(x=log10(dist$plasmid90Distance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Plasmid 90 Distance + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$plasmid50Distance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Plasmid 50 Distance + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$cpSNPDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to CP006923 SNP Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$ncSNPDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to NC009648 SNP Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$cpIndelDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to CP006923 Indel Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$ncIndelDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Aligned to NC009648 Indel Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$broadCoreGenomeDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Assembly Core Genome Distance\n + 1)", ylab="log10(time between cultures\n + 1)")
plotZoomJitter(x=log10(dist$cophylogDistance + 1), y=log10(dist$cultureDiff + 1), xlab="log10(Co-Phylog Distance + 1)", ylab="log10(time between cultures\n + 1)")
dev.off()
############Co-phylog analysis
#con = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\CoPhylogSingleFileContextSummaryTable.txt", header=T, sep="\t", colClasses=c("numeric", "character", "numeric", "character", rep("numeric", 4)))
con = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\CoPhylogContextSummaryTable.txt", header=T, sep="\t", colClasses="numeric")
names(con)[1] = "xID"
names(con)[2] = "yID"
cop = merge(phy, con, by=c("xID", "yID"))
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigCophylog.jpeg", width=1200, height=800, res=200)
par(mar=c(5.1, 4.1, 1.1, 1.1)) #remove extra space for title
plot(x=cop$cophylogDistance, y=cop$ProportionShared, xlab="Co-Phylog SNP Distance", ylab="Proportion Shared Contexts")
dev.off()
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigCophylogLog.jpeg", width=1200, height=800, res=200)
par(mar=c(5.1, 4.1, 1.1, 1.1))
#plot(x=log10(cop$cophylogDistance + 1), y=log10(cop$ProportionShared + 1), xlab="log10(Co-Phylog SNP Distance + 1)", ylab="log10(Proportion Shared Contexts + 1)")
plot(x=log10(cop$cophylogDistance + 1), y=cop$ProportionShared, xlab="log10(Co-Phylog SNP Distance + 1)", ylab="Proportion Shared Contexts")
dev.off()
View(con)
dist = dist[,-8]#remove genomicDistance, which comes from Anthony's table and is a repeat of Broad
dist = merge(dist, data.frame(xID=con$xID, yID=con$yID, proportionSharedContexts=con$ProportionShared), by=c("xID", "yID"))
write.table(dist, "C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\AllDistances.txt", sep="\t", row.names=F, col.names=T, quote=F)
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigCophylogVPlasmid.jpeg", width=5000, height=2000, res=200)
par(mfrow=c(2,5), mar=c(5.1, 4.1, 2.1, 1.1))
for(i in 1:10) {
close = dist[dist$cpSNPDistance < i & dist$broadCoreGenomeDistance < i,]
x=close$proportionSharedContexts
y=close$plasmid90Distance
plot(x=x, y=y, xlab="Proportion Shared Contexts", ylab="Plasmid 90 Distances", main=paste("Samples within ", i, " SNP distances", sep=""))
mod1 = lm(y~x)
abline(mod1, col="blue")
lab=paste("R^2=", round(summary(mod1)$r.squared,2), sep="")
legend("bottomright", lab, text.col="blue", cex=1, bty="n")
}
dev.off()
##########Compare co-phylog snps to plasmid distances in closely related strains to see if plasmids diff can be rep
jpeg(filename="C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\DistanceFigCophylogSNPVPlasmid.jpeg", width=5000, height=2000, res=200)
par(mfrow=c(2,5), mar=c(5.1, 4.1, 2.1, 1.1))
for(i in 1:10) {
close = dist[dist$cpSNPDistance < i & dist$broadCoreGenomeDistance < i,]
x=close$cophylogDistance
y=close$plasmid90Distance
plot(x=x, y=y, xlab="Cophylog SNPs", ylab="Plasmid 90 Distances", main=paste("Samples within ", i, " SNP distances", sep=""))
mod1 = lm(y~x)
abline(mod1, col="blue")
lab=paste("R^2=", round(summary(mod1)$r.squared,2), sep="")
legend("bottomright", lab, text.col="blue", cex=1, bty="n")
}
dev.off()
library("adegenet")
?seqTrack
table = read.table("Desktop\\Book3.txt", sep="\t", header=T, colClasses="numeric")
table = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\Book3.txt", sep="\t", header=T, colClasses="numeric")
table = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\Book3.txt", sep="\t", header=T, colClasses="numeric")
View(table)
sum(table$CHS21==0 && table$CHS43==1)
sum(table$CHS21==0 & table$CHS43==1)
tot=sum(table$CHS21==0 & table$CHS43==1)+sum(table$CHS21==1 & table$CHS43==0)
dup=duplicates(table$feure)
dup=duplicated(table$feure)
sum(dup)
ndup=sum(dup)
tot-ndup
dup.only = table[dup,]
ndup.sig = sum(dup.only$CHS21==0 & dup.only$CHS43==1)+sum(dup.only$CHS21==1 & dup.only$CHS43==0)
tot-ndup.sig
tot-ndup.sig/2
dup.sig = (dup.only$CHS21==0 & dup.only$CHS43==1) | (dup.only$CHS21==1 & dup.only$CHS43==0)
dup2 = dup.only[dup.sig,]
View(dup2)
sum(table$CHS21==-1)
sum(table$CHS43==-1)
tot-ndup.sig
dup.only$feure[dup.only$CHS21==0 & dup.only$CHS43==0]
mat = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\PilonSNPPresenceAbsenceMatrixNoIndel_CP006923.txt", sep="\t")
mat = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\PilonSNPPresenceAbsenceMatrixNoIndel_CP006923.txt", sep="\t", colClasses=c("character", rep("numeric", 75)))
mat = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\PilonSNPPresenceAbsenceMatrixNoIndel_CP006923.txt", sep="\t", colClasses=c("character", rep("numeric", 75)), header=T)
mat.dup = mat[dup,]
dup.only[mat.dup$CHS21==0 & mat.dup$CHS43==0 & mat.dup$CHS48==0 & mat.dup$CHS66==0]
dup.only[mat.dup$CHS21==0 & mat.dup$CHS43==0 & mat.dup$CHS48==0 & mat.dup$CHS66==0,]
dup.only$feure[mat.dup$CHS21==0 & mat.dup$CHS43==0 & mat.dup$CHS48==0 & mat.dup$CHS66==0]
?p.adjust
citation("vegan")
?kendall
??kendall
library("Kendall")
?kendall
?"Kendall"
?cor
?p.adjust
library("pscl")
library("lmtest")
library("nlme")
?lme
?gls
?lm
citation(lm)
citation(nlme)
citation("nlme")
citation("stats")
?p.adjust
library(vegan)
?pcoa
?capscale
require(ape)
#!/usr/bin/env Rscript
##draw transmission and epidemiology trees for Broad with outbreaker
##repeat 100 times
##4/29/16
rm(list=ls())
setwd("/nobackup/afodor_research/kwinglee/cre/outbreaker")
# setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\paper1_analysisMethods\\figures")
require(ape)
require(adegenet)
require(igraph)
require(RBGL)
require(Rgraphviz)
require(outbreaker)
max.dist = 11
##get data
all.data = read.table("AllDistances.txt", sep="\t", header=T, colClasses=c(rep("numeric", 4), "character", "character", rep("numeric", 16)))
meta = read.table("UNCCMetaData_Final_8-5-15.txt", sep="\t", header=T, colClasses = c("numeric", "numeric", rep("character", 7)))
strains = unique(c(all.data$xID, all.data$yID))
strains = strains[order(strains)] #here are only looking at those strains we have comparisons for all samples
##convert to distance matrices, given the data column distance
convertToDist <- function(file) {
table = read.table(file, header=T, sep="\t", colClasses="numeric")
colnames(table) = c("xGen", "yGen", "distance")
dist = matrix(nrow=length(strains), ncol=length(strains))
for(i in 1:length(strains)) {
for(j in 1:length(strains)) {
s1 = strains[i]
s2 = strains[j]
val = table$distance[(table$xGen==s1 & table$yGen==s2) | (table$yGen==s1 & table$xGen==s2)]
if(length(val) == 0 & s1==s2) {
val = 0
} else if(length(val) == 0) {
print(i)
print(j)
print("")
val = NA
}
dist[i,j] = val
}
}
return(dist)
}
##need to use original files because not all comparisons made it into AllDistances, but this weeds out missing strains
broad = convertToDist("distancesUpperTriangle.txt")
# broad = convertToDist("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\CRE\\BroadTrees\\distancesUpperTriangle.txt")
##culture dates need to be rearranged to same order as strains (also removing strains not in analysis)
cult = rep(NA, length(strains))
for(i in 1:length(strains)) {
for(j in 1:length(meta$SpecNumber)) {
if(as.numeric(strains[i]) == meta$SpecNumber[j]) {
cult[i] = meta$DeID_StudyCultureDate[j]
}
}
}
cultureDates = as.POSIXct("2008-01-01") + cult*24*60*60
##get encounter overlap
enc = read.table("encounterDaysOverlap.txt", header=T, sep="\t", colClasses="numeric")
names = c("Assembly Core Genome")
##function that given graphNEL returns the xy coordinates
getCoord<-function(graph) {
ag = agopen(graph, name=names[a])
nod = AgNode(ag) #most likely equivalent to attributes(plot)$AgNode
n1 = nod[[1]]
cent = getNodeXY(n1) #xy coordinates of the center
xy = data.frame(x=cent$x, y=cent$y)
for(i in 2:length(nod)) {
cent = getNodeXY(nod[[i]])
xy = rbind(xy, c(cent$x, cent$y))
}
return(xy)
}
##returns edge colors  for the given graph
##black if no evidence, orange if overlap between culture dates, pink if not between dates but before last culture date
##if fixName is true, then the edges are the position in the list of strains, otherwise the edges are the strain names
getEdgeCol <- function(graph, fixName=T) {
edges = as_ids(E(graph))
edge.col = rep("black", length(edges))
for(i in 1:length(edges)) {
sp = strsplit(edges[i], "|", fixed=T)[[1]]
x = as.numeric(sp[1])
y = as.numeric(sp[2])
if(fixName) {
p = which((enc$xID==strains[x] & enc$yID==strains[y]) |
(enc$xID==strains[y] & enc$yID==strains[x])) ##position in encounter data
} else {
p = which((enc$xID==x & enc$yID==y) |
(enc$xID==y & enc$yID==x)) ##position in encounter data
}
if(enc$daysOverlapBetweenCultures[p] > 0) {
edge.col[i] = "orange"
} else if(enc$daysOverlapBeforeLastCulture[p] > 0) {
edge.col[i] = "pink"
}
}
return(edge.col)
}
##returns the node colors for the given list of groups
colors = c("white", "darkgreen","yellow", "salmon", "burlywood4", "blue", "grey", "orange", "lavender", "lemonchiffon", "honeydew", "hotpink", "navajowhite1", "olivedrab1", "plum2", "powderblue", "seashell1", "tan3")
cpos=1
##set some colors based on the groupings so can have consistent color scheme
setCol = c("cyan", "blueviolet", "royalblue", "red", "palegreen3")
setNodes = c(70, 14, 6, 36, 48)
names(setCol) = setNodes
getNodeCol <- function(groups) {
col = rep(NA, length(groups))
col[is.na(groups)] = "black" #NA
##preset groups
for(i in 1:length(setCol)) {
col[groups==groups[strains==setNodes[i]]] = setCol[i]
}
if(is.na(groups[strains==28])) { #28 is in its own group for cophylog and NC
col[groups==groups[strains==28]] = "magenta"
}
if(is.na(groups[strains==38])) { #38 is part of the 36 group frequently so color similarly
col[groups==groups[strains==38]] = "red4"
}
##remaining groups
g = unique(groups[is.na(col)])
for(i in 1:length(g)) {
col[groups==g[i]] = colors[cpos]
cpos <<- cpos + 1
if(cpos > length(colors)) {
print("NEED MORE COLORS")
cpos=1
}
}
return(col)
}
#####
##outbreaker
##density function as exponential (taken from example)
w <- c(0,dexp(1:915, rate=1/5))
a=1 #analysis number
for(rep in 1:100) {
d = broad
##get outbreaker figure
print(paste("repetition", rep))
res = outbreaker(dist.mat = d, dates=cultureDates, w.dens = w)
##fix distances to show up on plots
res$D = as.dist(d)
##plot tree, clustered with edge betweenness
tree = get.tTree(res)
graph = plot(tree)
all.graph = as_graphnel(graph)
print(paste("Mean edge weights:", mean(tree$nb.mut[-15])))
##remove the edges with distance over max.dist
edges = as_ids(E(graph))
sub.ig = graph
for(i in 1:length(edges)) {
sp = strsplit(edges[i], "|", fixed=T)[[1]]
x = as.numeric(sp[1])
y = as.numeric(sp[2])
weight = d[x,y]
if(weight > max.dist[a]) {
sub.ig = delete.edges(sub.ig, edges[i])
}
}
sub.graph = as_graphnel(sub.ig)
##write results to table
df = data.frame(isolate=strains, tree$idx, tree$collec.dates, tree$idx.dna, tree$ances, tree$inf.dates,
tree$p.ances, tree$nb.mut, tree$n.gen, tree$p.gen)#, tree$inf.curves)
write.table(df, paste("broad_outbreaker_rep", rep, ".txt", sep=""), sep="\t", quote=F, row.names = F, col.names = T)
##get the groups
deg = degree(sub.graph)
nodes = c(1:length(strains))
roots = as.character(nodes[deg$inDegree == 0 & deg$outDegree > 0])
subtrees = acc(sub.graph, roots)
groups = rep(NA, length(strains))
for(i in 1:length(subtrees)) {
g = as.numeric(c(names(subtrees[i]), names(subtrees[[i]])))
groups[nodes %in% g] = strains[as.numeric(names(subtrees[i]))]
}
##get node colors
col = getNodeCol(groups)
#also need font color to be white for the black nodes
font.col = rep("black", length(col))
font.col[col=="black"] = "white"
##get edge colors; black if no evidence, orange if overlap between culture dates, pink if not between dates but before last culture date
edge.col = getEdgeCol(sub.ig)
print(paste("Orange edges", sum(edge.col=="orange")))
print(paste("Pink edges", sum(edge.col=="pink")))
print(paste("Black edges", sum(edge.col=="black")))
##get graphNEL coordinates
xy = getCoord(sub.graph)
mat = cbind(xy$x, xy$y)
##draw figure normal way
pdf(paste("broad_outbreaker_rep", rep, "_removeEdges.pdf", sep=""), height=30, width=30)
par(mar=c(.1, .1, 2, .1), cex.main=3)
plot(sub.ig, layout=mat, vertex.label=strains, vertex.color=col, vertex.label.color=font.col, vertex.label.cex=3.5, vertex.size=5.5,
edge.label.cex=2, edge.color=edge.col, edge.width=4, edge.label.color="dodgerblue3", edge.arrow.size=1.5,
main=paste("Assembly core rep ", rep, ", Removed edges greater than ", round(max.dist[a], digits=1), " mutations", sep=""))
dev.off()
##draw full tree
xy = getCoord(all.graph)
mat = cbind(xy$x, xy$y)
edge.col = getEdgeCol(graph)
print(paste("All orange edges", sum(edge.col=="orange")))
print(paste("All pink edges", sum(edge.col=="pink")))
print(paste("All black edges", sum(edge.col=="black")))
pdf(paste("broad_outbreaker_rep", rep, "_allEdges.pdf", sep=""), height=30, width=30)
par(mar=c(.1, .1, 2, .1), cex.main=3)
plot(graph, layout=mat, vertex.label=strains, vertex.color=col, vertex.label.color=font.col, vertex.label.cex=4, vertex.size=6,
edge.label.cex=1.5, edge.color=edge.col, edge.width=4, edge.label.color="dodgerblue3", edge.arrow.size=1.5,
main=paste("Assembly core rep ", rep))
dev.off()
print("")
}
log10(100)
log10(0.00368+1e5)
log10(0.00368+1e-5)
log10(0.00368+1e-5)+5
?lm
library(ape)
citation(ape)
require(ape)
citation(ape)
par()$mar
table = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Bishai\\microbiome\\humann\\humann-dna-balb-transpose.tsv", header=T, sep="\t")
sums = sum(table[,-(1:7)])
names(table)[8]
sums = rowSums(table[,-(1:7)])
histogram(sums)
hist(sums)
sums
df = dataframe(table$SampleID, sums)
df = data.frame(table$SampleID, sums)
View(df)
table = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Bishai\\microbiome\\humann\\humann-dna-black6-transpose.tsv", header=T, sep="\t")
sums = rowSums(table[,-(1:7)])
hist(sums)
df = data.frame(table$SampleID, sums)
View(df)
table=read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\Meyer\\rdp_phylum.txt")
table=read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\Meyer\\rdp_phylum.txt", sep="\t", header=T)
table = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Bishai\\microbiome\\analysis_suggested_by_afodor\\all\\all_logNorm_all.txt",
sep="\t", header=T,
colClasses = c("character", "numeric", "numeric", "character", "numeric", "character", "numeric", "character", rep("numeric", 1210)))
data = "cardia_pcoaCorrected_"
ifelse(grep("taxa", data), "Taxa", "PCoA")
ifelse(grepl("taxa", data), "Taxa", "PCoA")
##clean up metadata variables that cannot be publicly released
##3/13/17
rm(list=ls())
setwd("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\China\\files for public github release\\metadata")
table = read.table("C:\\Users\\kwinglee.cb3614tscr32wlt\\Documents\\Fodor\\China\\2015-11-23_metadata\\metadata_11232015.txt",
header = T, sep="\t", stringsAsFactors = F)
vars = c("hhid", "idind")
for(v in vars) {
table[,names(table)==v] = rep("removed", nrow(table))
}
write.table(table, "metadata_11232015.txt", sep="\t", quote = F, row.names = F, col.names = T)
